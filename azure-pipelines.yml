# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-2019

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: PowerShell@2
  inputs:
    filePath: 'builddocs.ps1'

# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: |
#       Install-PackageProvider -Name NuGet -Scope CurrentUser -Force
#       Install-Module dbatools -Scope CurrentUser -Force -Verbose
#       Install-Module Pester -Force -SkipPublisherCheck
#        Install-Module PSFramework -Force 
      
#        Import-Module  Import-Module "$(Build.SourcesDirectory)\dbachecks.psd1"
      
#     errorActionPreference: 'continue'
#   displayName: 'installeermodules'

# - powershell: |
#         get-childitem c:\modules
#         get-module Pester
#         Get-Module Dbatools
#         (get-installedmodule Pester).InstalledLocation
#         (get-installedmodule dbatools).InstalledLocation
#   displayName: "pad laten zien"

- powershell: |
        $outputFile = ".\TEST-RESULTS.xml"

        Invoke-Pester -OutputFile $outputFile -OutputFormat NUnitXml -enableExit
  failOnStderr: false
  displayName: 'Invoke-Pester'
- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
      testRunTitle: 'Test Results for Pester'
      buildPlatform: 'Windows'
      testRunner: 'NUnit'
      testResultsFiles: './TEST-RESULTS.xml'
      failTaskOnFailedTests: true # required to fail build when tests fail

